#!/bin/bash
##
## include_pirq_util -- utils for $PIRQ support

SUPPORTED_BASEBOARDS=('BTC-T37' 'BTC-S37' 'ONDA B250 BTC V1.05' 'TB85' 'CRESCENTBAY' 'skylake' 'B75' 'B85 ULTRA' '12XTREME' 'X12ULTRA')

# onda b250 $PIRQ support
# slot [1]=16
# slot [2]=37
# slot [3]=38
# slot [4]=39
# slot [5]=40
# slot [6]=41
# slot [7]=42
# slot [8]=43
# slot [9]=48
# slot [10]=53
# slot [11]=54
# slot [12]=55
b250_pirq_hard_map=(16 37 38 39 40 41 42 43 48 53 54 55)

# btc-x37 $PIRQ support
# slot [1]=16
# slot [2]=9
# slot [3]=10
# slot [4]=16
# slot [5]=17
# slot [6]=18
# slot [7]=33
# slot [8]=34
x37_pirq_hard_map=(16 9 10 16 17 18 33 34)

# crescentbay $PIRQ support (8x)
# slot [1]=16
# slot [2]=33
# slot [3]=34
# slot [4]=35
# slot [5]=36
# slot [6]=37
# slot [7]=38
# slot [8]=39
crescentbay_pirq_hard_map=(16 33 34 35 36 37 38 39)

# skylake $PIRQ support (8x)
# slot [1]=32
# slot [2]=37
# slot [3]=36
# slot [4]=35
# slot [5]=40
# slot [6]=43
# slot [7]=41
# slot [8]=33
skylake_pirq_hard_map=(32 37 36 35 40 43 41 33)

# B75 $PIRQ support (8x)
# slot [1]=33
# slot [2]=34
# slot [3]=8
# slot [4]=9
# slot [5]=10
# slot [6]=6  # slot 6 doesnt have a slot number
# slot [7]=17
# slot [8]=18
b75_pirq_hard_map=(33 34 8 9 10 6 17 18)

# B85 ULTRA $PIRQ support (OctoMiner 8x)
# slot [1]=34
# slot [2]=33
# slot [3]=32
# slot [4]=39
# slot [5]=35
# slot [6]=36
# slot [7]=37
# slot [8]=38
octo8_pirq_hard_map=(34 33 32 39 35 36 37 38)

# biostar open frame $PIRQ support (6x)
# slot [1]=16
# slot [2]=33
# slot [3]=34
# slot [4]=8
# slot [5]=9
# slot [6]=10
tb85_pirq_hard_map=(16 33 34 8 9 10)

# 12XTREME/X12ULTRA support (OctoMiner 12x)
# slot [1]='01'
# slot [2]='07'
# slot [3]='0c'
# slot [4]='0d'
# slot [5]='0b'
# slot [6]='05'
# slot [7]='0a'
# slot [8]='04'
# slot [9]='09'
# slot [10]='03'
# slot [11]='08'
# slot [12]='02'
octo12_hard_map=('01' '07' '0c' '0d' '0b' '05' '0a' '04' '09' '03' '08' '02')

C_DMI_PCI_TABLE="$(sudo dmidecode -t 9)"
C_BIOS_PIRQ_TABLE="$(sudo biosdecode)"
C_LSPCI_TABLE="$(lspci -mm)"
C_DMI_BASEBOARD_PRODUCT="$(sudo dmidecode -s baseboard-product-name)"

## BEGIN PIRQ FUNCTIONS ##


function check_for_pirq_table {
    if echo "$C_BIOS_PIRQ_TABLE" | grep -q "PCI Interrupt Routing"; then
        return 0
    fi
    return 1
}


function get_mb_product_name {
    local idx
    for ((idx=0; idx < ${#SUPPORTED_BASEBOARDS[@]}; idx++ )); do
        if [[ "${SUPPORTED_BASEBOARDS[$idx]}" == "$C_DMI_BASEBOARD_PRODUCT" ]]; then
            return $(( idx + 1 ))
        fi
    done
    return 0
}


function determine_pirq_hard_map {
    pirq_map=()
    get_mb_product_name
    support_idx=$?
    if [[ support_idx -eq 0 ]]; then
        echo "$0 ERROR (Unsupported: The detected motherboard model is not supported: $C_GET_DMI_BASEBOARD)" >&2
        exit 1
    fi
    if [[ support_idx -eq 1 || support_idx -eq 2 ]]; then
        pirq_map=(${x37_pirq_hard_map[@]})
    elif [[ support_idx -eq 3 ]]; then
        pirq_map=(${b250_pirq_hard_map[@]})
    elif [[ support_idx -eq 4 ]]; then
        pirq_map=(${tb85_pirq_hard_map[@]})
    elif [[ support_idx -eq 5 ]]; then
        pirq_map=(${crescentbay_pirq_hard_map[@]})
    elif [[ support_idx -eq 6 ]]; then
        pirq_map=(${skylake_pirq_hard_map[@]})
    elif [[ support_idx -eq 7 ]]; then
        pirq_map=(${b75_pirq_hard_map[@]})
    elif [[ support_idx -eq 8 ]]; then
        pirq_map=(${octo8_pirq_hard_map[@]})
    # "PIRQ-Like" maps; PIRQ Table not available
    elif [[ support_idx -eq 9 || support_idx -eq 10 ]]; then
        pirq_map=(${octo12_hard_map[@]})
    fi
}


function get_amd_pirq_busid () {
    local C_GET_AMD_BUSID
    local dev=
    if ! echo "$C_LSPCI_TABLE" | grep -q "Ellesmere"; then  # Ellesmere behave like nvidia cards
        C_GET_AMD_BUSID=$(echo "$C_LSPCI_TABLE" | grep "$1" -B 2 | grep -Po '([0-9a-f]{2})(:00)\.0' -m 1)
        dev=${C_GET_AMD_BUSID}
    else
        dev=$1
    fi
    unset C_GET_AMD_BUSID
    echo "$dev"
}

## END PIRQ FUNCTIONS ##
